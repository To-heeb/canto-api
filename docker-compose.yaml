version: '2.4'
# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    ports:
      - 8000:8000
    volumes:
      - ./:/app
    environment: 
      - DATABASE_HOSTNAME=postgres
      - DATABASE_PORT=5432
      - DATABASE_PASSWORD=mysecretpassword
      - DATABASE_NAME=canto_db
      - DATABASE_USERNAME=postgres
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - postgres
  postgres:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=canto_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin-view:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: myemail@example.com
      PGADMIN_DEFAULT_PASSWORD: mypgadminpassword
    ports:
      - "80:80"
    depends_on:
      - postgres
volumes:
  postgres-db:
  pgadmin-view:
secrets:
  db-password:
    file: db/password.txt